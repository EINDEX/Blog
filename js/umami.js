(s=>{const{screen:{width:t,height:e},navigator:{language:a},location:i,localStorage:r,document:n,history:o}=s,{hostname:c,pathname:l,search:u}=i;var p=n["currentScript"];if(!p)return;const d=(e,a)=>(Object.keys(a).forEach(t=>{void 0!==a[t]&&(e[t]=a[t])}),e);var h=(e,t,a)=>{const r=e[t];return(...t)=>(a.apply(null,t),r.apply(e,t))};const m=()=>r&&r.getItem("umami.disabled")||S&&(()=>{const{doNotTrack:t,navigator:e,external:a}=s,r="msTrackingProtectionEnabled";var n=t||e.doNotTrack||e.msDoNotTrack||a&&r in a&&a[r]();return"1"==n||"yes"===n})()||E&&!T.includes(c)||u.includes("PoFFjQ7x7XrUUx5D2sEfTV4Q");var g="data-",v="false",b=p.getAttribute.bind(p);const y=b(g+"website-id");var f=b(g+"host-url"),w=b(g+"auto-track")!==v;const S=b(g+"do-not-track"),k=b(g+"css-events")!==v,E=b(g+"domains")||"",T=E.split(",").map(t=>t.trim()),x=(f?f.replace(/\/$/,""):p.src.split("/").slice(0,-1).join("/"))+"/api/collect",U=t+"x"+e,V=/^umami--([a-z]+)--([\w]+[\w-]*)$/,$="[class*='umami--']";let j={},A=""+l,N=n.referrer,O;const D=()=>({website:y,hostname:c,screen:U,language:a,url:A}),K=(t,e)=>{if(!m())return fetch(x,{method:"POST",body:JSON.stringify({type:t,payload:e}),headers:d({"Content-Type":"application/json"},{"x-umami-cache":O})}).then(t=>t.text()).then(t=>O=t)},L=(t=A,e=N,a=y)=>K("pageview",d(D(),{website:a,url:t,referrer:e})),P=(t,e,a=A,r=y)=>K("event",d(D(),{website:r,url:a,event_name:t,event_data:e})),F=t=>{t=t.querySelectorAll($);Array.prototype.forEach.call(t,Q)},Q=r=>{const n=r.getAttribute.bind(r);(n("class")||"").split(" ").forEach(t=>{if(V.test(t)){const[,e,a]=t.split("--");t=j[t]||(j[t]=t=>{"click"!==e||"A"!==r.tagName||t.ctrlKey||t.shiftKey||t.metaKey||t.button&&1===t.button||n("target")?P(a):(t.preventDefault(),P(a).then(()=>{var t=n("href");t&&(i.href=t)}))});r.addEventListener(e,t,!0)}})};v=(t,e,a)=>{a&&(N=A,a=a.toString(),(A="http"===a.substring(0,4)?"/"+a.split("/").splice(3).join("/"):a)!==N)&&L()};s.umami||((b=t=>P(t)).trackView=L,b.trackEvent=P,s.umami=b),w&&!m()&&(o.pushState=h(o,"pushState",v),o.replaceState=h(o,"replaceState",v),g=()=>{"complete"===n.readyState&&(L(),k)&&(F(n),new MutationObserver(t=>{t.forEach(t=>{t=t.target;Q(t),F(t)})}).observe(n,{childList:!0,subtree:!0}))},n.addEventListener("readystatechange",g,!0),g())})(window);