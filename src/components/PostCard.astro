---
import { timeFormat } from "@utils/time";
import Tags from "./Tags.astro";
import {getLinkViaLocale, getLastPartOfSlug} from "@utils/slug";
import i18next,  {t} from "i18next"


const locale = i18next.language;

const {post} = Astro.props;

const updatedAt = post.data.updated || post.data.date;

const url = getLinkViaLocale(locale, `/posts/${getLastPartOfSlug(post.slug)}`);
---

<post-card class="post-card" data-url={url}>
  {
    post.data.cover ? <img width="96px" height="96px" class="cover" src={post.data.cover} /> :<></>
  }
  <div class="post-info">
    {post.data.series ?<span class="series">{t(`series:${post.data.series}`)}</span>:<></>}
  <h2>
    <a 
      href={url}
    >
    {post.data.title}
    </a>
    </h2>
    <p>
      {post.data.description}
    </p>
    <div class="post-info-footer">
      <Tags tags={post.data.tags.slice(0, 3)}></Tags>
      <time class="updated-at">{timeFormat(updatedAt, locale)}</time>
    </div>
  </div>
</post-card>

<style lang="scss">
  .post-card {
    @apply flex flex-row md:flex-col gap-2 overflow-hidden rounded-xl shadow-xl;
    background-color: var(--card-background-color);
    a {
      @apply bg-none;
    }

    .post-info {
      @apply flex flex-col px-2 py-2 w-full justify-between;

      .series {
        @apply text-center;
      }
      h2 {
        @apply text-2xl font-bold sm:text-xl;
      }
      time {
        @apply self-end text-sm min-w-fit;
      }
      p {
        @apply text-justify;
      }
      .post-info-footer {
        @apply flex flex-row justify-between pt-2;
      }
    }

    img {
      @apply object-cover w-1/3 md:w-full;
    }
  }
</style>

<script>
  class PostCard extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("click", ()=>{window.location.href = this.dataset.url})
    }
  }

  customElements.define('post-card', PostCard);
</script>