---
import { Blurhash } from "react-blurhash";
import { decode } from "blurhash";
import { decodeBlurHash, getBlurHashAverageColor } from "fast-blurhash";

const { hash, src, width, height, resolutionX, resolutionY, alt } = Astro.props;

// const pixels = decode("LEHV6nWB2yk8pyo0adR*.7kCMdnj", 32, 32);
// console.log(pixels);
---

<blurhash-img
  class="img-contrainer"
  data-bg-color={getBlurHashAverageColor("LEHV6nWB2yk8pyo0adR*.7kCMdnj")}
>
  <Blurhash
    id="blur"
    client:load
    hash="LEHV6nWB2yk8pyo0adR*.7kCMdnj"
    width={width}
    height={height}
    resolutionX={32}
    resolutionY={32}
    punch={1}
  />
  <img
    src={src}
    width={width}
    height={height}
    alt={"text"}
    loading="lazy"
    style={{
      "backgroud-color": `rgb(${getBlurHashAverageColor(
        "LEHV6nWB2yk8pyo0adR*.7kCMdnj"
      )})`,
    }}
  />
</blurhash-img>

<script>
  class BlurhashImage extends HTMLElement {
    constructor() {
      super();
      const image = this.querySelector("img");
      const blur = this.querySelector("#blur");
      const bgColor = this.attributes.getNamedItem("bg-color");
      if (image.complete) {
      } else {
        image.style.backgroundColor = `rgb(${bgColor})`;
        image.addEventListener("load", () => {
          console.log("loadding", image.complete);
        });
      }
    }
  }
  customElements.define("blurhash-img", BlurhashImage);
</script>

<style lang="scss">
  .img-contrainer {
    position: relative;
    * {
      position: absolute;
      right: 0;
      top: 0;
    }
    .img {
      position: absolute;
      right: 0;
      top: 0;
      background-color: "red";
    }
  }
</style>
