---
import i18next, { t } from "i18next";
import { getLinkViaLocale } from "@utils/slug";
import { timeFormat } from "@utils/time";
import ReplyA from "@components/webmentions/ReplyA.astro";
import InvisableAuthor from "@components/webmentions/InvisableAuthor.astro";
import WMStatus from "@components/webmentions/WMStatus.astro";

const locale = i18next.language;

const { thought, slug, showDate = true, slugPage=false } = Astro.props;
const { Content } = await thought.render();
---

<article class="h-entry">
  <InvisableAuthor />
  <div class="thought-meta">
    <a class="u-url" href={getLinkViaLocale(locale, slug)}>
      <time class="dt-updated" datetime={thought.data.updated.toISOString()}
        >{showDate && timeFormat(thought.data.updated, locale)}</time
      >
      <time class="dt-published" datetime={thought.data.date.toISOString()}
      ></time></a
    >
  </div>
  <section
    class="main title e-content format sm:format-sm lg:format-lg dark:format-invert format-pre:m-0 format-pre:p-2 format-li:list-disc list-disc"
  >
    {slugPage && <><a class="u-bridgy-fed" href="https://fed.brid.gy/"></a></>}
    <Content components={{ a: ReplyA, link: ReplyA }} />
  </section>
  <WMStatus slug={slug} />
</article>

<style lang="scss">
  article {
    @apply flex flex-col max-w-full;

    img {
      @apply w-full rounded-lg top-8 -z-10;
    }
    h1 {
      @apply text-3xl font-bold text-center;
    }

    .thought-meta {
      @apply flex flex-col;
      color: var(--text-color);

      time {
        @apply text-left;
      }
    }
    section.main.e-content {
      @apply list-disc max-w-full;
      color: var(--text-color);
      background-color: var(--bg-color);
    }

    .labels {
      @apply flex flex-row flex-wrap text-sm gap-2 justify-center;

      .tag {
        @apply rounded-sm px-2 bg-gray-300 dark:bg-gray-700;
        background-color: var(--label-background-color);
      }
    }
  }
</style>
