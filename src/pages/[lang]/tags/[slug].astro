---
import Layout from "@layouts/Layout.astro";
import { tagSlug } from "@utils/slug";
import { getAllByTag, getAllTags } from "@utils/tags";
import _ from "lodash";
import Breadcrumb from "@components/Breadcrumb.astro";
import { useTranslations } from "@i18n/utils";
import FeedList from "@components/feed/FeedList.astro";
import { getEntry } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const zhTags = await getAllTags("zh");
  const enTags = await getAllTags("en");
  return zhTags
    .map((tag) => {
      return {
        params: { slug: tagSlug(tag), lang: "zh" },
        props: { tag },
      };
    })
    .concat(
      enTags.map((tag) => {
        return {
          params: { slug: tagSlug(tag), lang: "en" },
          props: { tag },
        };
      })
    );
}

const { lang, slug } = Astro.params;
const { tag } = Astro.props;
const t = useTranslations(lang);

const tagEntry = await getEntry("tags", slug);
const actualTag = tagEntry
  ? tagEntry
  : { slug: slug, data: { zh: tag, en: tag } };

const contents = await getAllByTag(lang, actualTag.slug);
---

<Layout title={actualTag.data[lang]}>
  <Breadcrumb
    breadcrumb={[
      {
        url: `/tags`,
        name: "tags",
      },
    ]}
  />
  <article>
    <h1>{t("common.tag")}{actualTag.data[lang]}</h1>
    <FeedList contents={contents} />
  </article>
</Layout>

<style lang="scss">
  article {
    @apply min-w-full w-full flex flex-col gap-2;

    h1 {
      @apply text-4xl font-bold self-center text-center my-8;
    }

    h2 {
      @apply text-2xl font-bold text-center my-4;
    }
  }
</style>
