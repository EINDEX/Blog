---
import Layout from "@layouts/Layout.astro";
import { tagSlug } from "@utils/slug";
import { getAllByTag, getAllTags } from "@utils/tags";
import Project from "@components/Project.astro";
import { timeFormat } from "@utils/time";
import _ from "lodash";
import { getLinkViaLocale, getLastPartOfSlug } from "@utils/slug";
import Breadcrumb from "@components/Breadcrumb.astro";
import Thought from "@components/Thought.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

export const prerender = true;
const {lang} = Astro.params;
const t = useTranslations(lang);

export async function getStaticPaths() {
    
    const allTags = await getAllTags();
    return allTags.map((tag) => {
        return {
            params: { slug: tagSlug(tag), lang: 'zh' },
            props: { tag },
        };
    }).concat(
    allTags.map((tag) => {
        return {
            params: { slug: tagSlug(tag), lang: 'en' },
            props: { tag },
        };
    }))
}
const { tag } = Astro.props;
const { posts, thoughts } = await getAllByTag(lang, tag);
const groupedThoughts = _.groupBy(thoughts, (t) => timeFormat(t.data.date, lang));
---

<Layout title={tag}>
  <Breadcrumb
  breadcrumb={[
    {
      url:  `/tags`,
      name: "tags",
    },
  ]}
  />
  <article>
    <h1>{tag}</h1>

{posts.length === 0? <></>:
  <section>
    <h2>Posts</h2>
    <div class="posts">
      {
          posts.map((post) => {
            return (
              <li>
                <a href={getLinkViaLocale(lang, `/posts/${getLastPartOfSlug(post.slug)}`)}>
                  {post.data.title}
                </a>
              </li>
            );
          })
        }
    </div>
  </section>}
  {thoughts.length === 0? <></>:
    <section>
      <h2>Thoughts</h2>
      <div class="thoughts">
        {
          Object.keys(groupedThoughts).map((date) => (
            <>
              <div class="thoughts-in-day">
                {groupedThoughts[date].map((t) => (
                  <Thought
                    thought={t}
                    slug={getLinkViaLocale(
                      lang,
                      `/thoughts/${getLastPartOfSlug(t.slug)}`
                    )}
                  />
                ))}
              </div>
            </>
          ))
        }
      </div>
    </section>}
  </article>
</Layout>

<style lang="scss">
  article {
    @apply min-w-full w-full flex flex-col gap-2;

    h1 {
      @apply text-4xl font-bold self-center text-center my-8;
    }

    h2 {
      @apply text-2xl font-bold text-center my-4;
    }
    .projects {
      @apply flex flex-row flex-wrap gap-2 items-center justify-center;
    }
  }
</style>
