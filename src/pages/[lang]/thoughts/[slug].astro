---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import { getThoughts, getSummary } from "@utils/posts";
import Breadcrumb from "@components/Breadcrumb.astro";
import Comments from "@components/Comments.astro";
import { getLastPartOfSlug, getLocaleFromSlug } from "@utils/slug";
import Thought from "@components/Thought.astro";

export const prerender = true;
import { useTranslations } from "@i18n/utils";

export async function getStaticPaths() {
  const thoughts = await getThoughts();
  return thoughts.map((thought) => {
    const slug = getLastPartOfSlug(thought.slug);
    const lang = getLocaleFromSlug(thought.slug);
    return {
      params: { slug: slug, lang: lang },
      props: { thought },
    };
  });
}

type Props = { thought: CollectionEntry<`thoughts`> };
const { slug, lang } = Astro.params;
const t = useTranslations(lang);
const { thought } = Astro.props;
const { Content, remarkPluginFrontmatter } = await thought.render();
---

<Layout
  title={remarkPluginFrontmatter.rawString}
  seo={{
    title: remarkPluginFrontmatter.rawString,
    description: remarkPluginFrontmatter.rawString,
    url: Astro.url.pathname,
    date: thought.data.date,
    updated: thought.data.updated,
    keywords: thought.data.tags,
  }}
>
  <Breadcrumb
    breadcrumb={[
      {
        url: `/thoughts`,
        name: "thoughts",
      },
    ]}
  />
  <div class="thought-content">
    <Thought thought={thought} slug={`/thoughts/${slug}`} slugPage={true} />
    <!-- <Comments locale={lang} slug={`/thoughts/${slug}`} /> -->
  </div>
</Layout>

<style lang="scss">
  h1 {
    @apply text-3xl font-bold text-center;
  }

  .thought-content {
    @apply max-w-xl self-center;
  }
</style>
