---
import Layout from "@layouts/Layout.astro";
import { timeFormat } from "@utils/time";
import { getLinkViaLocale, getLastPartOfSlug } from "@utils/slug";
import Breadcrumb from "@components/Breadcrumb.astro";
import Thought from "@components/Thought.astro";
import { useTranslations } from "@i18n/utils";
import Author from "@components/Author.astro";
import Feed from "@components/feed/Feed.astro";
import { Image } from "astro:assets";
import { getPosts, getThoughts } from "@utils/posts";

export const prerender = true;

export async function getStaticPaths() {
  return [{ params: { lang: "en" } }, { params: { lang: "zh" } }];
}

const { lang } = Astro.params;
const t = useTranslations(lang);

const thoughts = await getThoughts(lang);
const posts = await getPosts(lang);
// console.log(thoughts, posts)
const contents = posts
  .concat(thoughts)
  .sort((a, b) => {
    return a.data.date - b.data.date;
  })
  .reverse();
---

<Layout title={"Feed"}>
  <Breadcrumb
    breadcrumb={[
      {
        url: `/tags`,
        name: "tags",
      },
    ]}
  />
  <article>
    <h1>{t("common.tag")}</h1>
    <Feed contents={contents} lang={lang} />
  </article>
</Layout>

<style lang="scss">
  article {
    @apply min-w-full w-full flex flex-col gap-2;

    h1 {
      @apply text-4xl font-bold self-center text-center my-8;
    }

    h2 {
      @apply text-2xl font-bold text-center my-4;
    }
    .feed {
      @apply flex flex-col gap-4 divide-y;

      .feed-item {
        @apply pt-4;
      }
    }

    .meta {
      @apply flex flex-row justify-between items-start;
    }
    .content {
      @apply ml-12 -mt-4;
    }
    .link-card {
      @apply flex flex-row gap-4 shadow rounded-xl my-2 h-32 overflow-hidden bg-slate-200 dark:bg-gray-800 items-center;
      .cover {
        @apply w-48 h-32 bg-gray-900 flex flex-col justify-center items-center;
      }

      .link-info {
        @apply flex flex-col gap-2 m-2;
      }

      .title {
        @apply font-bold;
      }

      .description {
        @apply text-gray-500 text-sm;
      }
    }
  }
</style>
